// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StudentService.Infrastructure.Persistence;

#nullable disable

namespace StudentService.Infrastructure.Migrations
{
    [DbContext(typeof(StudentDbContext))]
    [Migration("20250511094805_studentServiceMigration")]
    partial class studentServiceMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("StudentService.Domain.Entities.Enrollment", b =>
                {
                    b.Property<Guid>("StudentId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uuid");

                    b.HasKey("StudentId", "CourseId");

                    b.ToTable("Enrollments");

                    b.HasData(
                        new
                        {
                            StudentId = new Guid("a1b2c3d4-e5f6-7890-abcd-ef1234567890"),
                            CourseId = new Guid("a1b2c3d4-e5f6-7890-abcd-ef1234567890")
                        });
                });

            modelBuilder.Entity("StudentService.Domain.Entities.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1b2c3d4-e5f6-7890-abcd-ef1234567890"),
                            UserId = new Guid("b1c2d3e4-f5f6-7890-abcd-ef1234567890")
                        },
                        new
                        {
                            Id = new Guid("b2c3d4e5-f678-90ab-cdef-1234567890ab"),
                            UserId = new Guid("c2d3e4f5-f678-90ab-cdef-1234567890ab")
                        });
                });

            modelBuilder.Entity("StudentService.Domain.Entities.Enrollment", b =>
                {
                    b.HasOne("StudentService.Domain.Entities.Student", null)
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StudentService.Domain.Entities.Student", b =>
                {
                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
