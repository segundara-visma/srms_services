jobs:
  build:
    runs-on: ubuntu-latest  # Use GitHub-hosted runner (Ubuntu)
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Checkout the repo code

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2  # Setup Docker Buildx for multi-platform builds
        with:
          version: latest

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y curl  # Ensure curl is installed
          sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v3  # Setup .NET SDK (use v3 if you are using .NET 9)
        with:
          dotnet-version: '9.0'

      - name: Build Docker images using Docker Compose
        run: |
          docker-compose -f docker-compose.yml build  # Build the services

      - name: Start services using Docker Compose
        run: |
          docker-compose -f docker-compose.yml up -d  # Start services in detached mode

      # Removed the "Wait for services to be ready" step

      - name: Restore .NET dependencies
        run: dotnet restore  # Restore NuGet dependencies

      - name: Build the project
        run: dotnet build --configuration Release  # Build the project

      - name: Run tests
        run: dotnet test --configuration Release --no-build --verbosity normal  # Run tests without rebuilding the solution

      - name: Publish Test Results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: $(System.DefaultWorkingDirectory)/TestResults/*.xml

      - name: Stop and remove Docker Compose services
        run: |
          docker-compose -f docker-compose.yml down  # Clean up the services after tests are done
